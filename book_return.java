
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ANHIJEET
 */
public class book_return extends javax.swing.JInternalFrame {

    /**
     * Creates new form book_return
     */
    public book_return() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_bookdetails = new javax.swing.JTable();
        txts_id = new javax.swing.JTextField();
        comb_course = new javax.swing.JComboBox<>();
        txts_name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtb_id = new javax.swing.JTextField();
        txtb_name = new javax.swing.JTextField();
        txtb_publisher = new javax.swing.JTextField();
        txtb_author = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        currendate_chooser = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        issuedate_chooser = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
        jLabel1.setText("BOOK RETURN ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        jLabel2.setText("Student ID :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        jLabel3.setText("Student Name :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        jLabel4.setText("Course :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        table_bookdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_bookdetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_bookdetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_bookdetails);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 870, 210));

        txts_id.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txts_idFocusLost(evt);
            }
        });
        jPanel1.add(txts_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 122, 150, 30));

        comb_course.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CSE", "ME", "ELE", "CIVIL" }));
        jPanel1.add(comb_course, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, 110, -1));
        jPanel1.add(txts_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 172, 150, 30));

        jLabel5.setText("BOOK ID :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 120, 60, -1));

        jLabel6.setText("BOOK Author :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, -1, -1));

        jLabel7.setText("BOOK Publisher :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 260, -1, -1));

        jLabel8.setText("BOOK Name :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 160, -1, -1));
        jPanel1.add(txtb_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 120, 120, -1));
        jPanel1.add(txtb_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 160, 120, -1));

        txtb_publisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtb_publisherActionPerformed(evt);
            }
        });
        jPanel1.add(txtb_publisher, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, 120, -1));

        txtb_author.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtb_authorActionPerformed(evt);
            }
        });
        jPanel1.add(txtb_author, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 210, 120, -1));

        jLabel9.setText("BOOK RETURN DATE:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 380, -1, -1));
        jPanel1.add(currendate_chooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, 130, -1));

        jButton1.setText("SUBMIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 370, -1, -1));

        jButton2.setText("CLEAR");
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 370, -1, -1));

        jLabel10.setText("BOOK ISSUE DATE: ");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, -1, -1));
        jPanel1.add(issuedate_chooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 310, 140, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 750));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtb_publisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtb_publisherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtb_publisherActionPerformed

    private void txtb_authorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtb_authorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtb_authorActionPerformed

    private void txts_idFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txts_idFocusLost
        // TODO add your handling code here:
        
        
           try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/librarydatabase", "root", "");
            String sql="select * from book_issue where sid= '"+txts_id.getText()+"' and status='"+1+"'";
            PreparedStatement pst=con.prepareStatement(sql);
            ResultSet rs=pst.executeQuery();
            table_bookdetails.setModel(DbUtils.resultSetToTableModel(rs));
            int status=0;
            
            while(rs.next()){
                status +=1;
                txts_name.setText(rs.getString("sname"));
                comb_course.setSelectedItem(rs.getString("scourse"));
                
                
            }
            
            
        }
          catch(Exception ex){
          JOptionPane.showMessageDialog(null, ex.getMessage());}
    
    }//GEN-LAST:event_txts_idFocusLost

    private void table_bookdetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_bookdetailsMouseClicked
        // TODO add your handling code here:
        TableModel tbl = table_bookdetails.getModel();
       int row = table_bookdetails.getSelectedRow();
       int columb = table_bookdetails.getSelectedColumn();
       String sname =(String) table_bookdetails.getValueAt(row, 1);txts_name.setText(""+sname);
       String scourse=(String) table_bookdetails.getValueAt(row, 2);comb_course.setSelectedItem(scourse);
       int bid = (int) table_bookdetails.getValueAt(row, 3);txtb_id.setText(""+bid);
       String bname= (String) table_bookdetails.getValueAt(row, 4);txtb_name.setText(""+bname);
       String bauthor= (String) table_bookdetails.getValueAt(row, 5); txtb_author.setText(""+bauthor);
       String bpublisher= (String) table_bookdetails.getValueAt(row, 6);txtb_publisher.setText(""+bpublisher);
        String bissuedate= (String) table_bookdetails.getValueAt(row, 7);
        
                java.util.Date date2;
                 DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");  
   LocalDateTime now = LocalDateTime.now();  
   String current_date=dtf.format(now);
  
        try {
            date2 = new SimpleDateFormat("dd/MM/yyyy").parse(bissuedate);
            issuedate_chooser.setDate(date2);
             java.util.Date date= new SimpleDateFormat("dd/MM/yyyy").parse(current_date);
            currendate_chooser.setDate(date);
           
        } catch (ParseException ex) {
            Logger.getLogger(book_return.class.getName()).log(Level.SEVERE, null, ex);
        }
                
       
       
      
       
       
       
       JOptionPane.showMessageDialog(null," the selected Name :"+bname);
       
        
        
        
        
    }//GEN-LAST:event_table_bookdetailsMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        
         try{ int status=0,s=0;
           String issuedate;int due=0;double total=0;
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/librarydatabase", "root", "");
            
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");  
   LocalDateTime now = LocalDateTime.now();  
   String returndate=dtf.format(now);
      
   //converting datetimeformat to date
   Date input = new Date();
   Instant instant = input.toInstant();
   Date dater = Date.from(instant);  
        
        
        
        
        String date2;
        Date datei = null;
        String sqlq= "select bissuedate from book_issue where sid='"+txts_id.getText()+"' and bid='"+txtb_id.getText()+"' and status='"+1+"'";
        PreparedStatement pstt=con.prepareStatement(sqlq);
           ResultSet rss=pstt.executeQuery();
        if(rss.next()){
         date2=rss.getString("bissuedate");
             datei=new SimpleDateFormat("dd/MM/yyyy").parse(date2);
        }   
        
        
        
         long diffInMillies = Math.abs(datei.getTime() - dater.getTime());
         long diff = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);   
            
             if(diff<15){
            try{ 
             String sql5="select * from book_entry where book_id='"+txtb_id.getText()+"'";
                   PreparedStatement pst2=con.prepareStatement(sql5);
                   ResultSet rs2=pst2.executeQuery();
                   while(rs2.next()){
                    String stockk=rs2.getString("availableStock");
                    int p=Integer.parseInt(stockk);
                    int b=p+1;
                    String strr=String.valueOf(b);
                    
                    String sql="update book_issue set status='"+0+"' where sid='"+txts_id.getText()+"' and bid='"+txtb_id+"' ";
                    pst2=con.prepareStatement(sql);
                   int i=pst2.executeUpdate();
                   if(i>0){
                       //status added 0 to issuebook table
                   }
                    
                    String sql4="update book_entry set availablestock='"+strr+"' where book_id='"+txtb_id.getText()+"'";
                    PreparedStatement pst3=con.prepareStatement(sql4);
                    int a=pst3.executeUpdate();
                    if(a>0){
                        JOptionPane.showMessageDialog(null, "Book Return Sucessfullll");
                    }
                   }
                   
                   
          }catch(Exception e4){
              JOptionPane.showMessageDialog(null, e4);
          }
       
             due=(int) (diff-15);
            
           
            
        }else{
             try{
                 
                String sql4="select * book_entry where id='"+txtb_id.getText()+"'";
                PreparedStatement pst4=con.prepareStatement(sql4);
                ResultSet rs4=pst4.executeQuery();
                if(rs4.next()){
                    int price=rs4.getInt("price");
                    int p=price/10;
                     total=p*due;
                    
                }
            }catch(Exception e3){
                JOptionPane.showMessageDialog(null, e3.getMessage());
            }
            JOptionPane.showMessageDialog(null, "you need to pay"+total );
            
            
            
            java.util.Date date = currendate_chooser.getDate();
            DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
            String dateofbirth = formatter.format(date);
             Class.forName("com.mysql.jdbc.Driver");
           
             String sql="insert into book_fine(sid,sname,branch,bid,bname,bauthor,date,fine ,status) values('" +txts_id.getText()+"','" +txts_name.getText()+"','" +comb_course.getSelectedItem()+"','" +txtb_id.getText()+"','" +txtb_name.getText()+"','" +txtb_author.getText()+"','"+dateofbirth+"','" +total+"','"+1+"')  ";
            PreparedStatement pst= con.prepareStatement(sql);
            int i=pst.executeUpdate();
            
            
        }
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
//            String sql="UPDATE book_issue SET status = '"+status+"' WHERE bid = '"+txtb_id.getText()+"'";
//            PreparedStatement pst=con.prepareStatement(sql);
//            int i=pst.executeUpdate();
//            
//            
//           String sqlq="select * from book_entry where book_id='"+txtb_id.getText()+"'";
//           PreparedStatement pstt=con.prepareStatement(sqlq);
//           ResultSet rss=pstt.executeQuery();
//           while(rss.next()){
//               s=Integer.parseInt(rss.getString("availablestock"));
//           }
//            
//          if(i>0){
//                JOptionPane.showMessageDialog(null, "RETURN BOOK NAME :"+txtb_name.getText()+" AND ID :"+txtb_id.getText());
//            
//         sqlq="update book_entry set availablestock='"+(s+1)+"' where book_id='"+txtb_id.getText()+"'";
//         PreparedStatement pst4= con.prepareStatement(sqlq);
//         pst.executeUpdate();
//          }
                  /*                       
          Properties props = new Properties();    
          props.put("mail.smtp.host", "smtp.gmail.com");    
          props.put("mail.smtp.socketFactory.port", "465");    
          props.put("mail.smtp.socketFactory.class",    
                    "javax.net.ssl.SSLSocketFactory");    
          props.put("mail.smtp.auth", "true");    
          props.put("mail.smtp.port", "587");    
          //get Session   
          Session session = Session.getInstance(props, 
                  new javax.mail.Authenticator() {    
           @Override
           protected PasswordAuthentication getPasswordAuthentication() {    
           return new PasswordAuthentication("rowlandrowland554@gmail.com","rohan@123");  
           }    
          });    
          //compose message 
           String sqlq =" select mail from studen_reg where id='"+ txts_id.getText()+"'";
            PreparedStatement pst4=con.prepareStatement(sqlq);
            ResultSet rs4=pst4.executeQuery();
            String subjeet="returned book",mess=" you have returned this book id: '"+txtb_id.getText()+"' and name :'"+txtb_name.getText()+"' issuedate:'"+issuedate_chooser.getDate()+"' return date: '"+ currendate_chooser.getDate()+"'",smail = null;
            while(rs4.next()){
                 smail = rs4.getString(1);
            }
          
          try {    
           MimeMessage message = new MimeMessage(session);    
           message.addRecipient(Message.RecipientType.TO,new InternetAddress(smail));    
           message.setSubject(subjeet);    
           message.setText(mess);    
           //send message  
           Transport.send(message);    
           System.out.println("message sent successfully");    
          }catch (MessagingException e) {throw new RuntimeException(e);}*/
         
            
        }catch(Exception e1){
            
            JOptionPane.showMessageDialog(null, e1);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comb_course;
    private com.toedter.calendar.JDateChooser currendate_chooser;
    private com.toedter.calendar.JDateChooser issuedate_chooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_bookdetails;
    private javax.swing.JTextField txtb_author;
    private javax.swing.JTextField txtb_id;
    private javax.swing.JTextField txtb_name;
    private javax.swing.JTextField txtb_publisher;
    private javax.swing.JTextField txts_id;
    private javax.swing.JTextField txts_name;
    // End of variables declaration//GEN-END:variables
}
